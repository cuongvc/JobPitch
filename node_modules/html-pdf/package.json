{
  "name": "html-pdf",
  "version": "1.0.0",
  "description": "HTML to PDF converter that uses phantomjs",
  "main": "lib/index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "coffee --compile --output lib/ src/ && coffee test/index.coffee -n"
  },
  "author": {
    "name": "Marc Bachmann"
  },
  "license": "MIT",
  "devDependencies": {
    "coffee-script": "^1.7.1",
    "tape": "^3.4.0",
    "tap-spec": "^2.2.0"
  },
  "dependencies": {
    "phantomjs": "^1.9.8"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/marcbachmann/node-html-pdf.git"
  },
  "keywords": [
    "html",
    "pdf",
    "phantom",
    "phantomjs",
    "nodejs"
  ],
  "bugs": {
    "url": "https://github.com/marcbachmann/node-html-pdf/issues"
  },
  "homepage": "https://github.com/marcbachmann/node-html-pdf",
  "readme": "# node-html-pdf\n## a HTML to PDF converter that wraps phantomjs\n![image](http://public.admintools.ch/gh/html-pdf/businesscard.png)  \n[Example Business Card](http://public.admintools.ch/gh/html-pdf/businesscard.pdf)  \n -> [and its Source file](test/businesscard.html)  \n\n[Example Receipt](http://public.admintools.ch/gh/html-pdf/order.pdf)\n\n\n## Example\n```javascript\nvar fs = require('fs');\nvar pdf = require('html-pdf');\nvar html = fs.readFileSync('./test/businesscard.html', 'utf8')\nvar options = { filename: './businesscard.pdf', format: 'Letter' };\n\npdf.create(html, options).toFile(function(err, res) {\n  if (err) return console.log(err);\n  console.log(res); // { filename: '/tmp/html-pdf-8ymPV.pdf' }\n});\n```\n\n## API\n\n```js\npdf.create(html [, options]).toFile([filepath, ]callback)\npdf.create(html [, options]).toBuffer(callback)\npdf.create(html [, options]).toStream(callback)\n\n// for backwards compatibility\npdf.create(html [, options], callback)\n\n```\n\n\n## Options\n```javascript\nconfig = {\n\n  // Export options\n  \"directory\": \"/tmp\"        // The directory the file gets written into if not using .toFile(filename, callback). default: '/tmp'\n\n  // Papersize Options: http://phantomjs.org/api/webpage/property/paper-size.html\n  \"height\": \"10.5in\",        // allowed units: mm, cm, in, px\n  \"width\": \"8in\",            // allowed units: mm, cm, in, px\n  - or -\n  \"format\": \"Letter\",        // allowed units: A3, A4, A5, Legal, Letter, Tabloid\n  \"orientation\": \"portrait\", // portrait or landscape\n\n  // Page options\n  \"border\": \"0\"              // default is 0, units: mm, cm, in, px\n  \"header\": {\n    \"height\": \"45mm\",\n    \"contents\": '<div style=\"text-align: center;\">Author: Marc Bachmann</div>'\n  },\n  \"footer\": {\n    \"height\": \"28mm\",\n    \"contents\": '<span style=\"color: #444;\">{{page}}</span>/<span>{{pages}}</span>'\n  },\n\n  // File options\n  \"type\": \"pdf\",             // allowed file types: png, jpeg, pdf\n  \"quality\": \"75\",           // only used for types png & jpeg\n\n  // Script options\n  \"script\": '/url'           // Absolute path to a custom phantomjs script, use the file in lib/scripts as example\n  \"timeout\": 10000           // Timeout that will cancel phantomjs, in milliseconds\n\n}\n```\n\nThe full options object gets converted to JSON and will get passed to the phantomjs script as third argument.  \nThere are more options concerning the paperSize, header & footer options inside the phantomjs script.\n",
  "readmeFilename": "README.md",
  "_id": "html-pdf@1.0.0",
  "dist": {
    "shasum": "c00972b54e86a6a866d33ee4e44e8c64123da740"
  },
  "_from": "html-pdf@",
  "_resolved": "https://registry.npmjs.org/html-pdf/-/html-pdf-1.0.0.tgz"
}
